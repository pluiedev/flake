input {
    keyboard {
        xkb {
            layout "us"
            options "compose:ralt"
        }
    }

    touchpad {
        tap
        natural-scroll
        // macOS-style right click
        click-method "clickfinger"
        middle-emulation
    }

    workspace-auto-back-and-forth
}

// Place the monitors like so, in terms of logical coordinates:
// fettuccine:
//
//         0                       2560                4608
//         v-----------------------v-------------------v
//                   2560            2560 / 1.25 = 2048
//    0 >  +-----------------------+                     
//      |  |                       +-------------------+  < 160
//      |  |                       |                   |  |
// 1440 |  |       HDMI-A-1        |       eDP-1       |  | 1600 / 1.25
//      |  |                       |      (125%)       |  | = 1280
//      |  |                       |                   |  |
// 1440 >  +-----------------------+-------------------+  < 1440
// 
// pappardelle:
//
//         0                       2560                4480
//         v-----------------------v-------------------v
//                   2560            2880 / 1.5 = 1920
//    0 >  +-----------------------+                     
//      |  |                       +-------------------+ < 240
//      |  |                       |                   | 1800 / 1.5
// 1440 |  |       HDMI-A-1        |      Builtin      | = 1200
//      |  |                       |      (150%)       | 
//      |  |                       |                   |
// 1440 >  +-----------------------+-------------------+ < 1440

// Builtin display on fettuccine
// TODO: Use model number
/-output "eDP-1" {
    mode "2560x1600@165.040"
    scale 1.25
    variable-refresh-rate
    position x=2560 y=160 // 1440 - (1600 / 1.25)
}

// Builtin display on pappardelle
output "Samsung Display Corp. ATNA40HQ01-0  Unknown" {
    mode "2880x1800@120.000"
    scale 1.5
    variable-refresh-rate
    position x=2560 y=240 // 1440 - (1800 / 2)
}

// External display
output "PNP(AOC) Q32G2WG4 0x00000BCC" {
    mode "2560x1440@143.912"
    // Main monitor is to the left of the laptop monitor
    position x=0 y=0
}

layout {
    gaps 24
    center-focused-column "on-overflow"
    always-center-single-column
    background-color "transparent" // Let backdrop shine through

    preset-column-widths {
        proportion 0.33333
        proportion 0.5
        proportion 0.66667
    }

    default-column-width {
        proportion 0.6667
    }

    focus-ring {
        width 2.5
        active-color "#eba0ac"
        inactive-color "#00000000"
    }

    border {
        off
        width 2.5
        urgent-color "#f38ba8"
    }

    insert-hint {
        color "#eba0ac70"
    }

    shadow {
        on
        softness 30
        spread 10
        offset x=0 y=5
        color "#0007"
    }

    struts {
        left 32
        right 32
        top -16
        bottom -16
    }
}

overview {
    zoom 0.6667
    workspace-shadow {
        off
    }
}

screenshot-path "~/Pictures/Screenshots/screenshot-%Y-%m-%d-%H-%M-%S.png"

// Swaybg
layer-rule {
    match namespace="wallpaper"
    place-within-backdrop true
}

// Fuzzel
layer-rule {
    match namespace="launcher"
    baba-is-float true
    shadow {
        on
    }
}

window-rule {
    geometry-corner-radius 12
    clip-to-geometry true
}

// Only enable borders for urgent windows
window-rule {
    match is-urgent=true

    border {
        on
    }
}

window-rule {
    match app-id="com.mitchellh.ghostty"
    // Allow terminal background to be transparent
    draw-border-with-background false
}

window-rule {
    match app-id=r#"firefox$"# title="^Picture-in-Picture$"
    open-floating true
}

window-rule {
    match app-id="1Password"
    block-out-from "screen-capture"
}

binds {
    Mod+Shift+Slash { show-hotkey-overlay; }

    // Suggested binds for running programs: terminal, app launcher, screen locker.
    Mod+T repeat=false { spawn "ghostty" "+new-window"; }
    Super+D repeat=false { spawn "bash" "-c" "pkill fuzzel || fuzzel"; }
    Super+Alt+L { spawn "swaylock"; }

    XF86AudioRaiseVolume allow-when-locked=true { spawn "swayosd-client" "--output-volume=raise"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn "swayosd-client" "--output-volume=lower"; }
    XF86AudioMute allow-when-locked=true { spawn "swayosd-client" "--output-volume=mute-toggle"; }
    Shift+XF86AudioRaiseVolume allow-when-locked=true { spawn "swayosd-client" "--input-volume=raise"; }
    Shift+XF86AudioLowerVolume allow-when-locked=true { spawn "swayosd-client" "--input-volume=lower"; }
    XF86AudioMicMute allow-when-locked=true { spawn "swayosd-client" "--input-volume=mute-toggle"; }

    XF86MonBrightnessDown allow-when-locked=true { spawn "swayosd-client" "--device=intel_backlight" "--brightness=lower"; }
    XF86MonBrightnessUp allow-when-locked=true { spawn "swayosd-client" "--device=intel_backlight" "--brightness=raise"; }
    XF86KbdBrightnessDown allow-when-locked=true { spawn "swayosd-client" "--device=asus::kbd_backlight" "--brightness=lower"; }
    XF86KbdBrightnessUp allow-when-locked=true { spawn "swayosd-client" "--device=asus::kbd_backlight" "--brightness=raise"; }

    Mod+Q { close-window; }

    Mod+Left  { focus-column-left; }
    Mod+Down  { focus-window-down; }
    Mod+Up    { focus-window-up; }
    Mod+Right { focus-column-right; }
    Mod+H     { focus-column-left; }
    Mod+J     { focus-window-down; }
    Mod+K     { focus-window-up; }
    Mod+L     { focus-column-right; }

    Mod+Ctrl+Left  { move-column-left; }
    Mod+Ctrl+Down  { move-window-down; }
    Mod+Ctrl+Up    { move-window-up; }
    Mod+Ctrl+Right { move-column-right; }
    Mod+Ctrl+H     { move-column-left; }
    Mod+Ctrl+J     { move-window-down; }
    Mod+Ctrl+K     { move-window-up; }
    Mod+Ctrl+L     { move-column-right; }

    Mod+Home { focus-column-first; }
    Mod+End  { focus-column-last; }
    Mod+Ctrl+Home { move-column-to-first; }
    Mod+Ctrl+End  { move-column-to-last; }

    Mod+Shift+Left  { focus-monitor-left; }
    Mod+Shift+Down  { focus-monitor-down; }
    Mod+Shift+Up    { focus-monitor-up; }
    Mod+Shift+Right { focus-monitor-right; }
    Mod+Shift+H     { focus-monitor-left; }
    Mod+Shift+J     { focus-monitor-down; }
    Mod+Shift+K     { focus-monitor-up; }
    Mod+Shift+L     { focus-monitor-right; }

    Mod+Shift+Ctrl+Left  { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+Down  { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+Up    { move-column-to-monitor-up; }
    Mod+Shift+Ctrl+Right { move-column-to-monitor-right; }
    Mod+Shift+Ctrl+H     { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+J     { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+K     { move-column-to-monitor-up; }
    Mod+Shift+Ctrl+L     { move-column-to-monitor-right; }

    Mod+Page_Down      { focus-workspace-down; }
    Mod+Page_Up        { focus-workspace-up; }
    Mod+U              { focus-workspace-down; }
    Mod+I              { focus-workspace-up; }
    Mod+Ctrl+Page_Down { move-column-to-workspace-down; }
    Mod+Ctrl+Page_Up   { move-column-to-workspace-up; }
    Mod+Ctrl+U         { move-column-to-workspace-down; }
    Mod+Ctrl+I         { move-column-to-workspace-up; }

    Mod+Shift+Page_Down { move-workspace-down; }
    Mod+Shift+Page_Up   { move-workspace-up; }
    Mod+Shift+U         { move-workspace-down; }
    Mod+Shift+I         { move-workspace-up; }

    Mod+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
    Mod+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
    Mod+Ctrl+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
    Mod+Ctrl+WheelScrollUp   cooldown-ms=150 { move-column-to-workspace-up; }

    Mod+WheelScrollRight      { focus-column-right; }
    Mod+WheelScrollLeft       { focus-column-left; }
    Mod+Ctrl+WheelScrollRight { move-column-right; }
    Mod+Ctrl+WheelScrollLeft  { move-column-left; }

    Mod+Shift+WheelScrollDown      { focus-column-right; }
    Mod+Shift+WheelScrollUp        { focus-column-left; }
    Mod+Ctrl+Shift+WheelScrollDown { move-column-right; }
    Mod+Ctrl+Shift+WheelScrollUp   { move-column-left; }

    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }
    Mod+Ctrl+1 { move-column-to-workspace 1; }
    Mod+Ctrl+2 { move-column-to-workspace 2; }
    Mod+Ctrl+3 { move-column-to-workspace 3; }
    Mod+Ctrl+4 { move-column-to-workspace 4; }
    Mod+Ctrl+5 { move-column-to-workspace 5; }
    Mod+Ctrl+6 { move-column-to-workspace 6; }
    Mod+Ctrl+7 { move-column-to-workspace 7; }
    Mod+Ctrl+8 { move-column-to-workspace 8; }
    Mod+Ctrl+9 { move-column-to-workspace 9; }

    Mod+Tab { focus-workspace-previous; }

    Mod+BracketLeft  { consume-or-expel-window-left; }
    Mod+BracketRight { consume-or-expel-window-right; }

    Mod+Comma  { consume-window-into-column; }
    Mod+Period { expel-window-from-column; }

    Mod+R { switch-preset-column-width; }
    Mod+Shift+R { switch-preset-window-height; }
    Mod+Ctrl+R { reset-window-height; }
    Mod+F { maximize-column; }
    Mod+Shift+F { fullscreen-window; }

    Mod+Ctrl+F { expand-column-to-available-width; }

    Mod+C { center-column; }

    Mod+Minus { set-column-width "-10%"; }
    Mod+Equal { set-column-width "+10%"; }

    Mod+Shift+Minus { set-window-height "-10%"; }
    Mod+Shift+Equal { set-window-height "+10%"; }

    Mod+V       { toggle-window-floating; }
    Mod+Shift+V { switch-focus-between-floating-and-tiling; }
    Mod+W { toggle-column-tabbed-display; }

    Print { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }

    // Fn + F6 gets translated into this on fettuccine
    Super+Shift+S { screenshot; }
    Super+Ctrl+Shift+S { screenshot-screen; }
    Super+Alt+Shift+S { screenshot-window; }

    Mod+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }
    Ctrl+Alt+Delete { quit; }
}

cursor {
    xcursor-theme "BreezeX-Black"
    xcursor-size 32
}

hotkey-overlay {
    skip-at-startup
}

environment {
    ELECTRON_OZONE_PLATFORM_HINT "auto"
}


// Workspaces & default apps
workspace "chat"
workspace "dev" {
    open-on-output "HDMI-A-1"
}
workspace "gaming"

spawn-at-startup "waybar"
spawn-at-startup "swaync"
spawn-at-startup "fcitx5"
spawn-at-startup "swayidle"
spawn-at-startup "swaybg"
spawn-at-startup "swayosd-server"

// TODO: I do not know why 1Pass doesn't work on Wayland
spawn-at-startup "env" "ELECTRON_OZONE_PLATFORM_HINT=x11" "1password"
spawn-at-startup "ghostty" "--launched-from=desktop"
spawn-at-startup "firefox"
spawn-at-startup "vesktop" "--wayland-text-input-version=3"
spawn-at-startup "steam"

window-rule {
    match at-startup=true app-id="vesktop"
    open-on-workspace "chat"
}
window-rule {
    match at-startup=true app-id="com.mitchellh.ghostty"
    match at-startup=true app-id="firefox"
    open-on-workspace "dev"
}
window-rule {
    match at-startup=true app-id="steam"
    match app-id=r#"^steam_app_"#
    open-on-workspace "gaming"
}
window-rule {
    match app-id="steam" title=r#"^notificationtoasts_\d+_desktop$"#
    default-floating-position x=10 y=10 relative-to="top-right"
    // Never allow notifications steal focus
    open-focused false
}
